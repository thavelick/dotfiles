# Change prefix to Ctrl+Space to match nvim leader key
unbind C-b
set -g prefix C-Space
# Press prefix twice to send literal Ctrl+Space to application
bind C-Space send-prefix

# Enable mouse support
set -g mouse on

# Focus events enabled for terminals that support them
set -g focus-events on

# Set default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# Resize windows independently based on clients viewing each window (not session)
setw -g aggressive-resize on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Increase scrollback buffer size
set -g history-limit 50000

# Display tmux messages for longer
set -g display-time 4000

# Refresh status line more often
set -g status-interval 5

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Use vi mode in copy mode
setw -g mode-keys vi

# Platform-specific clipboard integration
# Detect OS and set appropriate clipboard commands
if-shell "uname -s | grep -q Darwin" \
    "set -g @copy-command 'pbcopy'" \
    "set -g @copy-command 'wl-copy'"

if-shell "uname -s | grep -q Darwin" \
    "set -g @paste-command 'pbpaste'" \
    "set -g @paste-command 'wl-paste'"

# Mouse wheel scrolling - works in copy mode and normal mode
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi C-WheelUpPane send-keys -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send-keys -X halfpage-down

# Vi-style copy mode key bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Clipboard integration for vi copy mode
# On Linux (Wayland), use wl-copy; on macOS, use pbcopy
if-shell "uname -s | grep -q Darwin" \
    "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'" \
    "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'wl-copy'"

if-shell "uname -s | grep -q Darwin" \
    "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'" \
    "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'wl-copy'"

if-shell "uname -s | grep -q Darwin" \
    "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'" \
    "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'wl-copy'"

# Vim-style pane splitting
bind s split-window -v    # horizontal split (like vim Ctrl+w s)
bind v split-window -h    # vertical split (like vim Ctrl+w v)

# Vim-style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Color palette
color_bg='#2e3440'
color_fg='#d8dee9'
color_gray='#4c566a'
color_blue='#88c0d0'
color_highlight='#5e81ac'
color_light='#eceff4'
color_green='#a3be8c'
color_yellow='#ebcb8b'
color_red='#bf616a'
color_cyan='#81a1c1'

# Status bar styling
set -g status-position bottom
set -g status-style "bg=$color_bg,fg=$color_fg"
set -g status-left-length 30
set -g status-right-length 80

# Status bar components
tmux_left_icon="#[fg=$color_blue,bold] ‚ö° #S #[fg=$color_gray]‚îÇ "
tmux_path="#[fg=$color_green]üìÅ #{b:pane_current_path}"
tmux_git="#[fg=$color_yellow]üåø #(cd #{pane_current_path}; git branch --show-current 2>/dev/null || echo \"no git\")"
tmux_process="#[fg=$color_red]‚öôÔ∏è #{?#{!=:#{pane_title},#{host}},#{pane_title},#{pane_current_command}}"
tmux_sep="#[fg=$color_gray]‚îÇ"

set -g status-left "$tmux_left_icon"
set -g status-right "$tmux_path $tmux_sep $tmux_git $tmux_sep $tmux_process"

# Window status
set -g window-status-current-style "bg=$color_highlight,fg=$color_light,bold"
set -g window-status-current-format ' #I:#W '
set -g window-status-style "fg=$color_cyan"
set -g window-status-format ' #I:#W '
set -g window-status-separator ''

# Pane borders
set -g pane-border-style "fg=$color_gray"
set -g pane-active-border-style "fg=$color_highlight"

# Message styling
set -g message-style "bg=$color_highlight,fg=$color_light"